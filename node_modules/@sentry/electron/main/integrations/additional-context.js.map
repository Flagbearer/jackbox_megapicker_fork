{"version":3,"file":"additional-context.js","sources":["../../src/src/main/integrations/additional-context.ts"],"sourcesContent":["import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport { DeviceContext } from '@sentry/types';\nimport { app, screen as electronScreen } from 'electron';\nimport { CpuInfo, cpus } from 'os';\n\nimport { mergeEvents } from '../../common';\nimport { whenAppReady } from '../electron-normalize';\n\nexport interface AdditionalContextOptions {\n  cpu: boolean;\n  screen: boolean;\n  memory: boolean;\n  language: boolean;\n}\n\nconst DEFAULT_OPTIONS: AdditionalContextOptions = {\n  cpu: true,\n  screen: true,\n  memory: true,\n  language: true,\n};\n\nconst INTEGRATION_NAME = 'AdditionalContext';\n\n/**\n * Adds additional Electron context to events\n */\nexport const additionalContextIntegration = defineIntegration((userOptions: Partial<AdditionalContextOptions> = {}) => {\n  const _lazyDeviceContext: DeviceContext = {};\n\n  const options = {\n    ...DEFAULT_OPTIONS,\n    ...userOptions,\n  };\n\n  function _setPrimaryDisplayInfo(): void {\n    const display = electronScreen.getPrimaryDisplay();\n    const width = Math.floor(display.size.width * display.scaleFactor);\n    const height = Math.floor(display.size.height * display.scaleFactor);\n    _lazyDeviceContext.screen_density = display.scaleFactor;\n    _lazyDeviceContext.screen_resolution = `${width}x${height}`;\n  }\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // noop\n    },\n    setup() {\n      // Some metrics are only available after app ready so we lazily load them\n      whenAppReady.then(\n        () => {\n          const { language, screen } = options;\n\n          if (language) {\n            _lazyDeviceContext.language = app.getLocale();\n          }\n\n          if (screen) {\n            _setPrimaryDisplayInfo();\n\n            electronScreen.on('display-metrics-changed', () => {\n              _setPrimaryDisplayInfo();\n            });\n          }\n        },\n        () => {\n          // ignore\n        },\n      );\n    },\n    processEvent(event) {\n      const device: DeviceContext = _lazyDeviceContext;\n\n      const { memory, cpu } = options;\n\n      if (memory) {\n        const { total, free } = process.getSystemMemoryInfo();\n        device.memory_size = total * 1024;\n        device.free_memory = free * 1024;\n      }\n\n      if (cpu) {\n        const cpuInfo: CpuInfo[] | undefined = cpus();\n        if (cpuInfo?.length) {\n          const firstCpu = cpuInfo[0];\n\n          device.processor_count = cpuInfo.length;\n          device.cpu_description = firstCpu.model;\n          device.processor_frequency = firstCpu.speed;\n\n          if (app.runningUnderARM64Translation) {\n            device.machine_arch = 'arm64';\n          }\n        }\n      }\n\n      return mergeEvents(event, { contexts: { device } });\n    },\n  };\n});\n\n/**\n * Adds additional Electron context to events\n *\n * @deprecated Use `additionalContextIntegration()z instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const AdditionalContext = convertIntegrationFnToClass(INTEGRATION_NAME, additionalContextIntegration);\n"],"names":["defineIntegration","electronScreen","whenAppReady","app","cpus","mergeEvents","convertIntegrationFnToClass"],"mappings":"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"}