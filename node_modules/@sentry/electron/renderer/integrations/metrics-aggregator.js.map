{"version":3,"file":"metrics-aggregator.js","sources":["../../src/src/renderer/integrations/metrics-aggregator.ts"],"sourcesContent":["import { BrowserClient } from '@sentry/browser';\nimport { convertIntegrationFnToClass } from '@sentry/core';\nimport type { IntegrationFn } from '@sentry/types';\n\nimport { ElectronRendererMetricsAggregator } from '../metrics';\n\nconst INTEGRATION_NAME = 'MetricsAggregator';\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n */\nexport const metricsAggregatorIntegration: IntegrationFn = () => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // noop\n    },\n    setup(client: BrowserClient) {\n      client.metricsAggregator = new ElectronRendererMetricsAggregator();\n    },\n  };\n};\n\n/**\n * Enables Sentry metrics monitoring.\n *\n * @experimental This API is experimental and might having breaking changes in the future.\n *\n * @deprecated Use `metricsAggregatorIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const MetricsAggregator = convertIntegrationFnToClass(INTEGRATION_NAME, metricsAggregatorIntegration);\n"],"names":["ElectronRendererMetricsAggregator","convertIntegrationFnToClass"],"mappings":";;;AAMA,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;AAE7C;;;;AAIG;AACI,MAAM,4BAA4B,GAAkB,MAAK;IAC9D,OAAO;AACL,QAAA,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAA;;SAER;AACD,QAAA,KAAK,CAAC,MAAqB,EAAA;AACzB,YAAA,MAAM,CAAC,iBAAiB,GAAG,IAAIA,yCAAiC,EAAE,CAAC;SACpE;KACF,CAAC;AACJ,EAAE;AAEF;;;;;;AAMG;AACH;AACa,MAAA,iBAAiB,GAAGC,gCAA2B,CAAC,gBAAgB,EAAE,4BAA4B;;;;;"}