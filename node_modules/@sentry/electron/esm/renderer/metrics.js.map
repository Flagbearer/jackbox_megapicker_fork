{"version":3,"file":"metrics.js","sources":["../../src/renderer/metrics.ts"],"sourcesContent":["import { MeasurementUnit, MetricsAggregator, Primitive } from '@sentry/types';\n\nimport { IPCInterface } from '../common/ipc';\nimport { getIPC } from './ipc';\n\n/**\n * Sends metrics to the Electron main process where they can be aggregated in a single process\n */\nexport class ElectronRendererMetricsAggregator implements MetricsAggregator {\n  private readonly _ipc: IPCInterface;\n\n  public constructor() {\n    this._ipc = getIPC();\n  }\n\n  /** @inheritdoc */\n  public add(\n    metricType: 'c' | 'g' | 's' | 'd',\n    name: string,\n    value: string | number,\n    unit?: MeasurementUnit | undefined,\n    tags?: Record<string, Primitive> | undefined,\n    timestamp?: number | undefined,\n  ): void {\n    this._ipc.sendAddMetric({ metricType, name, value, unit, tags, timestamp });\n  }\n\n  /** @inheritdoc */\n  public flush(): void {\n    // do nothing\n  }\n\n  /** @inheritdoc */\n  public close(): void {\n    // do nothing\n  }\n\n  /** @inheritdoc */\n  public toString(): string {\n    return '';\n  }\n}\n"],"names":[],"mappings":";;AAKA;;AAEG;MACU,iCAAiC,CAAA;AAG5C,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC;KACtB;;IAGM,GAAG,CACR,UAAiC,EACjC,IAAY,EACZ,KAAsB,EACtB,IAAkC,EAClC,IAA4C,EAC5C,SAA8B,EAAA;AAE9B,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;KAC7E;;IAGM,KAAK,GAAA;;KAEX;;IAGM,KAAK,GAAA;;KAEX;;IAGM,QAAQ,GAAA;AACb,QAAA,OAAO,EAAE,CAAC;KACX;AACF;;;;"}