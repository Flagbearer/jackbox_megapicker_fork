{"version":3,"file":"event-to-main.js","sources":["../../../src/renderer/integrations/event-to-main.ts"],"sourcesContent":["import { Event, EventProcessor, Integration } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { getIPC } from '../ipc';\n\n/**\n * @deprecated Events are now sent to the main process via a custom transport.\n *\n * Passes events to the main process.\n */\nexport class EventToMain implements Integration {\n  /** @inheritDoc */\n  public static id = 'EventToMain';\n\n  /** @inheritDoc */\n  public readonly name: string;\n\n  public constructor() {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = EventToMain.id;\n  }\n\n  /** @inheritDoc */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void): void {\n    const ipc = getIPC();\n\n    addGlobalEventProcessor((event: Event) => {\n      // Ensure breadcrumbs is not `undefined` as `walk` translates it into a string\n      event.breadcrumbs = event.breadcrumbs || [];\n\n      // Remove the environment as it defaults to 'production' and overwrites the main process environment\n      event.environment = undefined;\n\n      ipc.sendEvent(JSON.stringify(normalize(event, 20, 2_000)));\n      // Events are handled and sent from the main process so we return null here so nothing is sent from the renderer\n      return null;\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAKA;;;;AAIG;MACU,WAAW,CAAA;AAOtB,IAAA,WAAA,GAAA;;AAEE,QAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC;KAC5B;;AAGM,IAAA,SAAS,CAAC,uBAA2D,EAAA;AAC1E,QAAA,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;AAErB,QAAA,uBAAuB,CAAC,CAAC,KAAY,KAAI;;YAEvC,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,IAAI,EAAE,CAAC;;AAG5C,YAAA,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC;AAE9B,YAAA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,IAAK,CAAC,CAAC,CAAC,CAAC;;AAE3D,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC,CAAC;KACJ;;AA1BD;AACc,WAAE,CAAA,EAAA,GAAG,aAAa;;;;"}