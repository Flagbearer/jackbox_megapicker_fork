{"version":3,"file":"queue.js","sources":["../../../src/main/transports/queue.ts"],"sourcesContent":["import { TransportRequest } from '@sentry/types';\nimport { logger, uuid4 } from '@sentry/utils';\nimport { join } from 'path';\n\nimport { readFileAsync, unlinkAsync, writeFileAsync } from '../fs';\nimport { BufferedWriteStore } from '../store';\n\nconst MILLISECONDS_PER_DAY = 86_400_000;\n\ninterface PersistedRequest {\n  bodyPath: string;\n  date: Date;\n  // Envelopes were persisted in a different format in v3\n  // If this property exists, we discard this event\n  type?: unknown;\n}\n\ninterface PopResult {\n  request: QueuedTransportRequest;\n  pendingCount: number;\n}\n\nexport interface QueuedTransportRequest extends TransportRequest {\n  date?: Date;\n}\n\n/** A request queue that is persisted to disk to survive app restarts */\nexport class PersistedRequestQueue {\n  private readonly _queue: BufferedWriteStore<PersistedRequest[]>;\n\n  public constructor(\n    private readonly _queuePath: string,\n    private readonly _maxAgeDays: number = 30,\n    private readonly _maxCount: number = 30,\n  ) {\n    this._queue = new BufferedWriteStore(this._queuePath, 'queue', []);\n  }\n\n  /** Adds a request to the queue */\n  public async add(request: QueuedTransportRequest): Promise<number> {\n    const bodyPath = uuid4();\n    let queuedEvents = 0;\n\n    await this._queue.update((queue) => {\n      queue.push({\n        bodyPath,\n        date: request.date || new Date(),\n      });\n\n      while (queue.length > this._maxCount) {\n        const removed = queue.shift();\n        if (removed) {\n          this._removeBody(removed.bodyPath);\n        }\n      }\n\n      queuedEvents = queue.length;\n      return queue;\n    });\n\n    try {\n      await writeFileAsync(join(this._queuePath, bodyPath), request.body);\n    } catch (_) {\n      //\n    }\n\n    return queuedEvents;\n  }\n\n  /** Pops the oldest event from the queue */\n  public async pop(): Promise<PopResult | undefined> {\n    let found: PersistedRequest | undefined;\n    let pendingCount = 0;\n    const cutOff = Date.now() - MILLISECONDS_PER_DAY * this._maxAgeDays;\n\n    await this._queue.update((queue) => {\n      while ((found = queue.shift())) {\n        // We drop events created in v3 of the SDK or before the cut-off\n        if ('type' in found || found.date.getTime() < cutOff) {\n          // we're dropping this event so delete the body\n          this._removeBody(found.bodyPath);\n          found = undefined;\n        } else {\n          pendingCount = queue.length;\n          break;\n        }\n      }\n      return queue;\n    });\n\n    if (found) {\n      try {\n        const body = await readFileAsync(join(this._queuePath, found.bodyPath));\n        this._removeBody(found.bodyPath);\n\n        return {\n          request: {\n            body,\n            date: found.date || new Date(),\n          },\n          pendingCount,\n        };\n      } catch (e) {\n        logger.warn('Filed to read queued request body', e);\n      }\n    }\n\n    return undefined;\n  }\n\n  /** Removes the body of the request */\n  private _removeBody(bodyPath: string): void {\n    unlinkAsync(join(this._queuePath, bodyPath)).catch(() => {\n      // ignore\n    });\n  }\n}\n"],"names":[],"mappings":"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"}