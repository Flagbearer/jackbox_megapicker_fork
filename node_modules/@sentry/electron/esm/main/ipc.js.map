{"version":3,"file":"ipc.js","sources":["../../src/main/ipc.ts"],"sourcesContent":["import { BaseClient, captureEvent, getClient, getCurrentScope } from '@sentry/core';\nimport {\n  Attachment,\n  AttachmentItem,\n  ClientOptions,\n  Envelope,\n  Event,\n  EventItem,\n  Profile,\n  ScopeData,\n} from '@sentry/types';\nimport { forEachEnvelopeItem, logger, parseEnvelope, SentryError } from '@sentry/utils';\nimport { app, ipcMain, protocol, WebContents, webContents } from 'electron';\nimport { TextDecoder, TextEncoder } from 'util';\n\nimport {\n  IPCChannel,\n  IPCMode,\n  mergeEvents,\n  MetricIPCMessage,\n  normalizeUrlsInReplayEnvelope,\n  PROTOCOL_SCHEME,\n  RendererStatus,\n} from '../common';\nimport { createRendererAnrStatusHandler } from './anr';\nimport { registerProtocol, supportsFullProtocol, whenAppReady } from './electron-normalize';\nimport { rendererProfileFromIpc } from './integrations/renderer-profiling';\nimport { ElectronMainOptionsInternal } from './sdk';\n\nlet KNOWN_RENDERERS: Set<number> | undefined;\nlet WINDOW_ID_TO_WEB_CONTENTS: Map<string, number> | undefined;\n\nconst SENTRY_CUSTOM_SCHEME = {\n  scheme: PROTOCOL_SCHEME,\n  privileges: { bypassCSP: true, corsEnabled: true, supportFetchAPI: true, secure: true },\n};\n\nfunction newProtocolRenderer(): void {\n  KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n  WINDOW_ID_TO_WEB_CONTENTS = WINDOW_ID_TO_WEB_CONTENTS || new Map();\n\n  for (const wc of webContents.getAllWebContents()) {\n    const wcId = wc.id;\n    if (KNOWN_RENDERERS.has(wcId)) {\n      continue;\n    }\n\n    if (!wc.isDestroyed()) {\n      wc.executeJavaScript('window.__SENTRY_RENDERER_ID__').then((windowId: string | undefined) => {\n        if (windowId && KNOWN_RENDERERS && WINDOW_ID_TO_WEB_CONTENTS) {\n          KNOWN_RENDERERS.add(wcId);\n          WINDOW_ID_TO_WEB_CONTENTS.set(windowId, wcId);\n\n          wc.once('destroyed', () => {\n            KNOWN_RENDERERS?.delete(wcId);\n            WINDOW_ID_TO_WEB_CONTENTS?.delete(windowId);\n          });\n        }\n      }, logger.error);\n    }\n  }\n}\n\nfunction captureEventFromRenderer(\n  options: ElectronMainOptionsInternal,\n  event: Event,\n  attachments: Attachment[],\n  contents?: WebContents,\n): void {\n  const process = contents ? options?.getRendererName?.(contents) || 'renderer' : 'renderer';\n\n  // Ensure breadcrumbs are empty as they sent via scope updates\n  event.breadcrumbs = event.breadcrumbs || [];\n\n  // Remove the environment as it defaults to 'production' and overwrites the main process environment\n  delete event.environment;\n\n  // Remove the SDK info as we want the Electron SDK to be the one reporting the event\n  delete event.sdk?.name;\n  delete event.sdk?.version;\n  delete event.sdk?.packages;\n\n  captureEvent(mergeEvents(event, { tags: { 'event.process': process } }), { attachments });\n}\n\nfunction handleEvent(options: ElectronMainOptionsInternal, jsonEvent: string, contents?: WebContents): void {\n  let event: Event;\n  try {\n    event = JSON.parse(jsonEvent) as Event;\n  } catch {\n    logger.warn('sentry-electron received an invalid event message');\n    return;\n  }\n\n  captureEventFromRenderer(options, event, [], contents);\n}\n\nfunction eventFromEnvelope(envelope: Envelope): [Event, Attachment[], Profile | undefined] | undefined {\n  let event: Event | undefined;\n  const attachments: Attachment[] = [];\n  let profile: Profile | undefined;\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type === 'event' || type === 'transaction' || type === 'feedback') {\n      event = Array.isArray(item) ? (item as EventItem)[1] : undefined;\n    } else if (type === 'attachment') {\n      const [headers, data] = item as AttachmentItem;\n\n      attachments.push({\n        filename: headers.filename,\n        attachmentType: headers.attachment_type,\n        contentType: headers.content_type,\n        data,\n      });\n    } else if (type === 'profile') {\n      profile = item[1] as unknown as Profile;\n    }\n  });\n\n  return event ? [event, attachments, profile] : undefined;\n}\n\nfunction handleEnvelope(options: ElectronMainOptionsInternal, env: Uint8Array | string, contents?: WebContents): void {\n  const envelope = parseEnvelope(env, new TextEncoder(), new TextDecoder());\n\n  const eventAndAttachments = eventFromEnvelope(envelope);\n  if (eventAndAttachments) {\n    const [event, attachments, profile] = eventAndAttachments;\n\n    if (profile) {\n      // We have a 'profile' item and there is no way for us to pass this through event capture\n      // so store them in a cache and reattach them via the `beforeEnvelope` hook before sending\n      rendererProfileFromIpc(event, profile);\n    }\n\n    captureEventFromRenderer(options, event, attachments, contents);\n  } else {\n    const normalizedEnvelope = normalizeUrlsInReplayEnvelope(envelope, app.getAppPath());\n    // Pass other types of envelope straight to the transport\n    void getClient()?.getTransport()?.send(normalizedEnvelope);\n  }\n}\n\nfunction handleMetric(metric: MetricIPCMessage): void {\n  const client = getClient<BaseClient<ClientOptions>>();\n\n  if (client?.metricsAggregator) {\n    client.metricsAggregator.add(\n      metric.metricType,\n      metric.name,\n      metric.value,\n      metric.unit,\n      metric.tags,\n      metric.timestamp,\n    );\n  } else {\n    logger.warn(\n      `Metric was dropped because the aggregator is not configured in the main process. Enable via '_experiments.metricsAggregator: true' in your init call.`,\n    );\n  }\n}\n\n/** Is object defined and has keys */\nfunction hasKeys(obj: any): boolean {\n  return obj != undefined && Object.keys(obj).length > 0;\n}\n\n/**\n * Handle scope updates from renderer processes\n */\nfunction handleScope(options: ElectronMainOptionsInternal, jsonScope: string): void {\n  let sentScope: ScopeData;\n  try {\n    sentScope = JSON.parse(jsonScope) as ScopeData;\n  } catch {\n    logger.warn('sentry-electron received an invalid scope message');\n    return;\n  }\n\n  const scope = getCurrentScope();\n\n  if (hasKeys(sentScope.user)) {\n    scope.setUser(sentScope.user);\n  }\n\n  if (hasKeys(sentScope.tags)) {\n    scope.setTags(sentScope.tags);\n  }\n\n  if (hasKeys(sentScope.extra)) {\n    scope.setExtras(sentScope.extra);\n  }\n\n  for (const attachment of sentScope.attachments || []) {\n    scope.addAttachment(attachment);\n  }\n\n  const breadcrumb = sentScope.breadcrumbs.pop();\n  if (breadcrumb) {\n    scope.addBreadcrumb(breadcrumb, options?.maxBreadcrumbs || 100);\n  }\n}\n\n/** Enables Electron protocol handling */\nfunction configureProtocol(options: ElectronMainOptionsInternal): void {\n  if (app.isReady()) {\n    throw new SentryError(\"Sentry SDK should be initialized before the Electron app 'ready' event is fired\");\n  }\n\n  protocol.registerSchemesAsPrivileged([SENTRY_CUSTOM_SCHEME]);\n\n  // We Proxy this function so that later user calls to registerSchemesAsPrivileged don't overwrite our custom scheme\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  protocol.registerSchemesAsPrivileged = new Proxy(protocol.registerSchemesAsPrivileged, {\n    apply: (target, __, args: Parameters<typeof protocol.registerSchemesAsPrivileged>) => {\n      target([...args[0], SENTRY_CUSTOM_SCHEME]);\n    },\n  });\n\n  const rendererStatusChanged = createRendererAnrStatusHandler();\n\n  whenAppReady\n    .then(() => {\n      for (const sesh of options.getSessions()) {\n        registerProtocol(sesh.protocol, PROTOCOL_SCHEME, (request) => {\n          const getWebContents = (): WebContents | undefined => {\n            const webContentsId = request.windowId ? WINDOW_ID_TO_WEB_CONTENTS?.get(request.windowId) : undefined;\n            return webContentsId ? webContents.fromId(webContentsId) : undefined;\n          };\n\n          const data = request.body;\n          if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.RENDERER_START}`)) {\n            newProtocolRenderer();\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.EVENT}`) && data) {\n            handleEvent(options, data.toString(), getWebContents());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.SCOPE}`) && data) {\n            handleScope(options, data.toString());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ENVELOPE}`) && data) {\n            handleEnvelope(options, data, getWebContents());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ADD_METRIC}`) && data) {\n            handleMetric(JSON.parse(data.toString()) as MetricIPCMessage);\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.STATUS}`) && data) {\n            const contents = getWebContents();\n            if (contents) {\n              const status = (JSON.parse(data.toString()) as { status: RendererStatus }).status;\n              rendererStatusChanged(status, contents);\n            }\n          }\n        });\n      }\n    })\n    .catch((error) => logger.error(error));\n}\n\n/**\n * Hooks IPC for communication with the renderer processes\n */\nfunction configureClassic(options: ElectronMainOptionsInternal): void {\n  ipcMain.on(IPCChannel.RENDERER_START, ({ sender }) => {\n    const id = sender.id;\n    // Keep track of renderers that are using IPC\n    KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n\n    if (KNOWN_RENDERERS.has(id)) {\n      return;\n    }\n\n    // In older Electron, sender can be destroyed before this callback is called\n    if (!sender.isDestroyed()) {\n      KNOWN_RENDERERS.add(id);\n\n      sender.once('destroyed', () => {\n        KNOWN_RENDERERS?.delete(id);\n      });\n    }\n  });\n  ipcMain.on(IPCChannel.EVENT, ({ sender }, jsonEvent: string) => handleEvent(options, jsonEvent, sender));\n  ipcMain.on(IPCChannel.SCOPE, (_, jsonScope: string) => handleScope(options, jsonScope));\n  ipcMain.on(IPCChannel.ENVELOPE, ({ sender }, env: Uint8Array | string) => handleEnvelope(options, env, sender));\n\n  const rendererStatusChanged = createRendererAnrStatusHandler();\n  ipcMain.on(IPCChannel.STATUS, ({ sender }, status: RendererStatus) => rendererStatusChanged(status, sender));\n\n  ipcMain.on(IPCChannel.ADD_METRIC, (_, metric: MetricIPCMessage) => handleMetric(metric));\n}\n\n/** Sets up communication channels with the renderer */\nexport function configureIPC(options: ElectronMainOptionsInternal): void {\n  if (!supportsFullProtocol() && options.ipcMode === IPCMode.Protocol) {\n    throw new SentryError('IPCMode.Protocol is only supported in Electron >= v5');\n  }\n\n  // eslint-disable-next-line no-bitwise\n  if (supportsFullProtocol() && (options.ipcMode & IPCMode.Protocol) > 0) {\n    configureProtocol(options);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  if ((options.ipcMode & IPCMode.Classic) > 0) {\n    configureClassic(options);\n  }\n}\n"],"names":[],"mappings":"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"}