{"version":3,"file":"electron-breadcrumbs.js","sources":["../../../src/main/integrations/electron-breadcrumbs.ts"],"sourcesContent":["import { addBreadcrumb, convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport { NodeClient } from '@sentry/node';\nimport { Breadcrumb } from '@sentry/types';\nimport { app, autoUpdater, BrowserWindow, powerMonitor, screen, WebContents } from 'electron';\n\nimport { onBrowserWindowCreated, onWebContentsCreated, whenAppReady } from '../electron-normalize';\nimport { getRendererProperties, trackRendererProperties } from '../renderers';\nimport { ElectronMainOptions } from '../sdk';\n\n/** A function that returns true if the named event should create breadcrumbs */\ntype EventFunction = (name: string) => boolean;\ntype EventTypes = boolean | string[] | EventFunction | undefined;\n\nexport interface ElectronBreadcrumbsOptions<T> {\n  /**\n   * app events\n   *\n   * default: (name) => !name.startsWith('remote-')\n   */\n  app: T;\n  /**\n   * autoUpdater events\n   *\n   * default: all\n   */\n  autoUpdater: T;\n  /**\n   * webContents events\n   * default: ['dom-ready', 'context-menu', 'load-url', 'destroyed']\n   */\n  webContents: T;\n  /**\n   * BrowserWindow events\n   *\n   * default: ['closed', 'close', 'unresponsive', 'responsive', 'show', 'blur', 'focus', 'hide',\n   *            'maximize', 'minimize', 'restore', 'enter-full-screen', 'leave-full-screen' ]\n   */\n  browserWindow: T;\n  /**\n   * screen events\n   *\n   * default: all\n   */\n  screen: T;\n  /**\n   * powerMonitor events\n   *\n   * default: all\n   */\n  powerMonitor: T;\n\n  /**\n   * Whether to capture window titles with webContents/browserWindow breadcrumbs\n   *\n   * default: false\n   */\n  captureWindowTitles: boolean;\n}\n\nconst DEFAULT_OPTIONS: ElectronBreadcrumbsOptions<EventFunction> = {\n  // We exclude events starting with remote as they can be quite verbose\n  app: (name) => !name.startsWith('remote-'),\n  autoUpdater: () => true,\n  webContents: (name) => ['dom-ready', 'context-menu', 'load-url', 'destroyed'].includes(name),\n  browserWindow: (name) =>\n    [\n      'closed',\n      'close',\n      'unresponsive',\n      'responsive',\n      'show',\n      'blur',\n      'focus',\n      'hide',\n      'maximize',\n      'minimize',\n      'restore',\n      'enter-full-screen',\n      'leave-full-screen',\n    ].includes(name),\n  screen: () => true,\n  powerMonitor: () => true,\n  captureWindowTitles: false,\n};\n\n/** Converts all user supplied options to function | false */\nexport function normalizeOptions(\n  options: Partial<ElectronBreadcrumbsOptions<EventTypes>>,\n): Partial<ElectronBreadcrumbsOptions<EventFunction | false>> {\n  return (Object.keys(options) as (keyof ElectronBreadcrumbsOptions<EventTypes>)[]).reduce((obj, k) => {\n    if (k === 'captureWindowTitles') {\n      obj[k] = !!options[k];\n    } else {\n      const val: EventTypes = options[k];\n      if (Array.isArray(val)) {\n        obj[k] = (name) => val.includes(name);\n      } else if (typeof val === 'function' || val === false) {\n        obj[k] = val;\n      }\n    }\n\n    return obj;\n  }, {} as Partial<ElectronBreadcrumbsOptions<EventFunction | false>>);\n}\n\nconst INTEGRATION_NAME = 'ElectronBreadcrumbs';\n\n/**\n * Adds breadcrumbs for Electron events.\n */\nexport const electronBreadcrumbsIntegration = defineIntegration(\n  (userOptions: Partial<ElectronBreadcrumbsOptions<EventTypes>> = {}) => {\n    const options: ElectronBreadcrumbsOptions<EventFunction | false> = {\n      ...DEFAULT_OPTIONS,\n      ...normalizeOptions(userOptions),\n    };\n\n    function patchEventEmitter(\n      emitter: NodeJS.EventEmitter | WebContents | BrowserWindow,\n      category: string,\n      shouldCapture: EventFunction | undefined | false,\n      id?: number | undefined,\n    ): void {\n      const emit = emitter.emit.bind(emitter) as (event: string, ...args: unknown[]) => boolean;\n\n      emitter.emit = (event: string, ...args: unknown[]) => {\n        if (shouldCapture && shouldCapture(event)) {\n          const breadcrumb: Breadcrumb = {\n            category: 'electron',\n            message: `${category}.${event}`,\n            timestamp: new Date().getTime() / 1_000,\n            type: 'ui',\n          };\n\n          if (id) {\n            breadcrumb.data = { ...getRendererProperties(id) };\n\n            if (!options.captureWindowTitles && breadcrumb.data?.title) {\n              delete breadcrumb.data?.title;\n            }\n          }\n\n          addBreadcrumb(breadcrumb);\n        }\n\n        return emit(event, ...args);\n      };\n    }\n\n    return {\n      name: INTEGRATION_NAME,\n      setupOnce() {\n        // noop\n      },\n      setup(client: NodeClient) {\n        const clientOptions = client.getOptions() as ElectronMainOptions | undefined;\n\n        trackRendererProperties();\n\n        whenAppReady.then(\n          () => {\n            // We can't access these until app 'ready'\n            if (options.screen) {\n              patchEventEmitter(screen, 'screen', options.screen);\n            }\n\n            if (options.powerMonitor) {\n              patchEventEmitter(powerMonitor, 'powerMonitor', options.powerMonitor);\n            }\n          },\n          () => {\n            // ignore\n          },\n        );\n\n        if (options.app) {\n          patchEventEmitter(app, 'app', options.app);\n        }\n\n        if (options.autoUpdater) {\n          patchEventEmitter(autoUpdater, 'autoUpdater', options.autoUpdater);\n        }\n\n        if (options.browserWindow) {\n          onBrowserWindowCreated((window) => {\n            const id = window.webContents.id;\n            const windowName = clientOptions?.getRendererName?.(window.webContents) || 'window';\n            patchEventEmitter(window, windowName, options.browserWindow, id);\n          });\n        }\n\n        if (options.webContents) {\n          onWebContentsCreated((contents) => {\n            const id = contents.id;\n            const webContentsName = clientOptions?.getRendererName?.(contents) || 'renderer';\n            patchEventEmitter(contents, webContentsName, options.webContents, id);\n          });\n        }\n      },\n    };\n  },\n);\n\n/**\n * Adds breadcrumbs for Electron events.\n *\n * @deprecated Use `electronBreadcrumbsIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const ElectronBreadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, electronBreadcrumbsIntegration);\n"],"names":[],"mappings":";;;;;AA2DA,MAAM,eAAe,GAA8C;;AAEjE,IAAA,GAAG,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AAC1C,IAAA,WAAW,EAAE,MAAM,IAAI;AACvB,IAAA,WAAW,EAAE,CAAC,IAAI,KAAK,CAAC,WAAW,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC5F,IAAA,aAAa,EAAE,CAAC,IAAI,KAClB;QACE,QAAQ;QACR,OAAO;QACP,cAAc;QACd,YAAY;QACZ,MAAM;QACN,MAAM;QACN,OAAO;QACP,MAAM;QACN,UAAU;QACV,UAAU;QACV,SAAS;QACT,mBAAmB;QACnB,mBAAmB;KACpB,CAAC,QAAQ,CAAC,IAAI,CAAC;AAClB,IAAA,MAAM,EAAE,MAAM,IAAI;AAClB,IAAA,YAAY,EAAE,MAAM,IAAI;AACxB,IAAA,mBAAmB,EAAE,KAAK;CAC3B,CAAC;AAEF;AACM,SAAU,gBAAgB,CAC9B,OAAwD,EAAA;AAExD,IAAA,OAAQ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAsD,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,KAAI;QAClG,IAAI,CAAC,KAAK,qBAAqB,EAAE;YAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvB,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,GAAG,GAAe,OAAO,CAAC,CAAC,CAAC,CAAC;AACnC,YAAA,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACtB,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvC,aAAA;iBAAM,IAAI,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,KAAK,EAAE;AACrD,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACd,aAAA;AACF,SAAA;AAED,QAAA,OAAO,GAAG,CAAC;KACZ,EAAE,EAAgE,CAAC,CAAC;AACvE,CAAC;AAED,MAAM,gBAAgB,GAAG,qBAAqB,CAAC;AAE/C;;AAEG;AACU,MAAA,8BAA8B,GAAG,iBAAiB,CAC7D,CAAC,WAAA,GAA+D,EAAE,KAAI;IACpE,MAAM,OAAO,mCACR,eAAe,CAAA,EACf,gBAAgB,CAAC,WAAW,CAAC,CACjC,CAAC;IAEF,SAAS,iBAAiB,CACxB,OAA0D,EAC1D,QAAgB,EAChB,aAAgD,EAChD,EAAuB,EAAA;QAEvB,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAmD,CAAC;QAE1F,OAAO,CAAC,IAAI,GAAG,CAAC,KAAa,EAAE,GAAG,IAAe,KAAI;;AACnD,YAAA,IAAI,aAAa,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;AACzC,gBAAA,MAAM,UAAU,GAAe;AAC7B,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,OAAO,EAAE,CAAA,EAAG,QAAQ,CAAA,CAAA,EAAI,KAAK,CAAE,CAAA;oBAC/B,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAK;AACvC,oBAAA,IAAI,EAAE,IAAI;iBACX,CAAC;AAEF,gBAAA,IAAI,EAAE,EAAE;oBACN,UAAU,CAAC,IAAI,GAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,qBAAqB,CAAC,EAAE,CAAC,CAAE,CAAC;AAEnD,oBAAA,IAAI,CAAC,OAAO,CAAC,mBAAmB,KAAI,CAAA,EAAA,GAAA,UAAU,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAA,EAAE;AACnD,wBAAA,CAAA,EAAA,GAAA,UAAU,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,OAAA,EAAA,CAAE,KAAK,CAAC;AAC/B,qBAAA;AACF,iBAAA;gBAED,aAAa,CAAC,UAAU,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,OAAO,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;AAC9B,SAAC,CAAC;KACH;IAED,OAAO;AACL,QAAA,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAA;;SAER;AACD,QAAA,KAAK,CAAC,MAAkB,EAAA;AACtB,YAAA,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAqC,CAAC;AAE7E,YAAA,uBAAuB,EAAE,CAAC;AAE1B,YAAA,YAAY,CAAC,IAAI,CACf,MAAK;;gBAEH,IAAI,OAAO,CAAC,MAAM,EAAE;oBAClB,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AACrD,iBAAA;gBAED,IAAI,OAAO,CAAC,YAAY,EAAE;oBACxB,iBAAiB,CAAC,YAAY,EAAE,cAAc,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;AACvE,iBAAA;aACF,EACD,MAAK;;AAEL,aAAC,CACF,CAAC;YAEF,IAAI,OAAO,CAAC,GAAG,EAAE;gBACf,iBAAiB,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5C,aAAA;YAED,IAAI,OAAO,CAAC,WAAW,EAAE;gBACvB,iBAAiB,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;AACpE,aAAA;YAED,IAAI,OAAO,CAAC,aAAa,EAAE;AACzB,gBAAA,sBAAsB,CAAC,CAAC,MAAM,KAAI;;AAChC,oBAAA,MAAM,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC;AACjC,oBAAA,MAAM,UAAU,GAAG,CAAA,MAAA,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,eAAe,8DAAG,MAAM,CAAC,WAAW,CAAC,KAAI,QAAQ,CAAC;oBACpF,iBAAiB,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;AACnE,iBAAC,CAAC,CAAC;AACJ,aAAA;YAED,IAAI,OAAO,CAAC,WAAW,EAAE;AACvB,gBAAA,oBAAoB,CAAC,CAAC,QAAQ,KAAI;;AAChC,oBAAA,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;AACvB,oBAAA,MAAM,eAAe,GAAG,CAAA,CAAA,EAAA,GAAA,aAAa,aAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,eAAe,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,EAAA,QAAQ,CAAC,KAAI,UAAU,CAAC;oBACjF,iBAAiB,CAAC,QAAQ,EAAE,eAAe,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACxE,iBAAC,CAAC,CAAC;AACJ,aAAA;SACF;KACF,CAAC;AACJ,CAAC,EACD;AAEF;;;;AAIG;AACH;AACa,MAAA,mBAAmB,GAAG,2BAA2B,CAAC,gBAAgB,EAAE,8BAA8B;;;;"}