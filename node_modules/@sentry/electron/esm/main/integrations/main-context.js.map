{"version":3,"file":"main-context.js","sources":["../../../src/main/integrations/main-context.ts"],"sourcesContent":["import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport { app } from 'electron';\n\nimport { mergeEvents, normalizeEvent } from '../../common';\nimport { getEventDefaults } from '../context';\n\nconst INTEGRATION_NAME = 'MainContext';\n\n/** Adds Electron context to events and normalises paths. */\nexport const mainContextIntegration = defineIntegration(() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // noop\n    },\n    async processEvent(event, _, client) {\n      const clientOptions = client.getOptions();\n      const normalized = normalizeEvent(event, app.getAppPath());\n      const defaults = await getEventDefaults(clientOptions.release, clientOptions.environment);\n      return mergeEvents(defaults, normalized);\n    },\n  };\n});\n\n/**\n * Adds Electron context to events and normalises paths.\n *\n * @deprecated Use `mainContextIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const MainContext = convertIntegrationFnToClass(INTEGRATION_NAME, mainContextIntegration);\n"],"names":[],"mappings":";;;;;;;AAMA,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAEvC;AACa,MAAA,sBAAsB,GAAG,iBAAiB,CAAC,MAAK;IAC3D,OAAO;AACL,QAAA,IAAI,EAAE,gBAAgB;QACtB,SAAS,GAAA;;SAER;AACK,QAAA,YAAY,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,EAAA;;AACjC,gBAAA,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;gBAC1C,MAAM,UAAU,GAAG,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;AAC3D,gBAAA,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AAC1F,gBAAA,OAAO,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;aAC1C,CAAA,CAAA;AAAA,SAAA;KACF,CAAC;AACJ,CAAC,EAAE;AAEH;;;;AAIG;AACH;AACa,MAAA,WAAW,GAAG,2BAA2B,CAAC,gBAAgB,EAAE,sBAAsB;;;;"}