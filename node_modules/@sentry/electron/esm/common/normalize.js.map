{"version":3,"file":"normalize.js","sources":["../../src/common/normalize.ts"],"sourcesContent":["import { getCurrentScope } from '@sentry/node';\nimport { Envelope, Event, Profile, ReplayEvent } from '@sentry/types';\nimport { addItemToEnvelope, createEnvelope, forEachEnvelopeItem, normalizeUrlToBase } from '@sentry/utils';\n\n/**\n * Normalizes all URLs in an event. See {@link normalizeUrl} for more\n * information. Mutates the passed in event.\n *\n * @param event The event to normalize.\n */\nexport function normalizeEvent(event: Event, basePath: string): Event {\n  // Retrieve stack traces and normalize their paths. Without this, grouping\n  // would not work due to usernames in file paths.\n  for (const exception of event.exception?.values || []) {\n    for (const frame of exception.stacktrace?.frames || []) {\n      if (frame.filename) {\n        frame.filename = normalizeUrlToBase(frame.filename, basePath);\n      }\n    }\n  }\n\n  // We need to normalize debug ID images the same way as the stack frames for symbolicator to match them correctly\n  for (const debugImage of event.debug_meta?.images || []) {\n    if (debugImage.type === 'sourcemap') {\n      debugImage.code_file = normalizeUrlToBase(debugImage.code_file, basePath);\n    }\n  }\n\n  if (event.transaction) {\n    event.transaction = normalizeUrlToBase(event.transaction, basePath);\n  }\n\n  const { request = {} } = event;\n  if (request.url) {\n    request.url = normalizeUrlToBase(request.url, basePath);\n  }\n\n  if (event.contexts?.feedback?.url && typeof event.contexts.feedback.url === 'string') {\n    event.contexts.feedback.url = normalizeUrlToBase(event.contexts.feedback.url, basePath);\n  }\n\n  event.contexts = {\n    ...event.contexts,\n    runtime: {\n      name: 'Electron',\n      version: process.versions.electron,\n    },\n  };\n\n  // The user agent is parsed by Sentry and would overwrite certain context\n  // information, which we don't want. Generally remove it, since we know that\n  // we are browsing with Chrome.\n  if (request.headers) {\n    delete request.headers['User-Agent'];\n  }\n\n  // The Node SDK includes server_name, which contains the machine name of the computer running Electron.\n  // In this case this is likely to include PII.\n  const { tags = {} } = event;\n  delete tags.server_name;\n  delete event.server_name;\n  return event;\n}\n\n/** Normalizes URLs in any replay_event items found in an envelope */\nexport function normalizeUrlsInReplayEnvelope(envelope: Envelope, basePath: string): Envelope {\n  let modifiedEnvelope = createEnvelope(envelope[0]);\n\n  let isReplay = false;\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type === 'replay_event') {\n      isReplay = true;\n      const [headers, event] = item as [{ type: 'replay_event' }, ReplayEvent];\n\n      const currentScope = getCurrentScope().getScopeData();\n      event.breadcrumbs = currentScope.breadcrumbs;\n      event.tags = currentScope.tags;\n      event.user = currentScope.user;\n\n      if (Array.isArray(event.urls)) {\n        event.urls = event.urls.map((url) => normalizeUrlToBase(url, basePath));\n      }\n\n      if (event?.request?.url) {\n        event.request.url = normalizeUrlToBase(event.request.url, basePath);\n      }\n\n      modifiedEnvelope = addItemToEnvelope(modifiedEnvelope, [headers, event]);\n    } else if (type === 'replay_recording') {\n      modifiedEnvelope = addItemToEnvelope(modifiedEnvelope, item);\n    }\n  });\n\n  return isReplay ? modifiedEnvelope : envelope;\n}\n\n/**\n * Normalizes all URLs in a profile\n */\nexport function normaliseProfile(profile: Profile, basePath: string): void {\n  for (const frame of profile.profile.frames) {\n    if (frame.abs_path) {\n      frame.abs_path = normalizeUrlToBase(frame.abs_path, basePath);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}